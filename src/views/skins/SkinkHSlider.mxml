<?xml version="1.0" encoding="utf-8"?>
<!-- http://blog.flexexamples.com/2009/05/18/styling-the-data-tip-on-a-spark-hslider-control-in-flex-gumbo/ -->
<s:SparkSkin name="CustomHSliderSkin"
			 xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 
			 minHeight="11" 
			 alpha.disabled="0.5" xmlns:local="*">
	
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
	</s:states>
	
	<fx:Metadata>
		<![CDATA[
		[HostComponent("spark.components.HSlider")]
		]]>
	</fx:Metadata>
	
	<fx:Script>
		
		<![CDATA[
		
		import uk.co.baremedia.gnomo.utils.Resizer;
		
		/* Define the skin elements that should not be colorized.
		For slider, the skin itself is colorized but the individual parts are not. */
		static private const exclusions:Array = ["track", "thumb"];
		
		[Bindable] private var _sliderNumberHeight	:Number;
		[Bindable] private var _sliderNumberWidth	:Number;
		
		override public function get colorizeExclusions():Array {
			return exclusions;
		}
		
		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
		{
			super.updateDisplayList(unscaledWidth, unscaledHeight);
			invalidateDisplayList();
			
			var rect:Rectangle = Resizer.scaleByAspectRatio(300, 29, 0, unscaledWidth - thumb.width);
			_sliderNumberWidth  = rect.width;
			_sliderNumberHeight = rect.height;
		}
		
		 override protected function measure() : void {
			// Temporarily move the thumb to the left of the Slider so measurement
			// doesn't factor in its x position. This allows resizing the
			// HSlider to less than 100px in width.
			var thumbPos:Number = thumb.getLayoutBoundsX();
			thumb.setLayoutBoundsPosition(0, thumb.getLayoutBoundsY());
			super.measure();
			thumb.setLayoutBoundsPosition(thumbPos, thumb.getLayoutBoundsY());
		} 
		]]>
	</fx:Script>
	
	
	<local:SliderNumbers
		id="numbers"
		y="{ track.y - numbers.height }"
		x="50"
		width="{_sliderNumberWidth}"
		height="{_sliderNumberHeight}"/>
		
	<!--- Defines the skin class for the HSliderSkin's track. The default skin class is HSliderTrackSkin. -->
	<s:Button 
		id="track"
		left="0" right="0" top="{ numbers.height }" bottom="0"
		minWidth="33" maxHeight="9"
		skinClass="views.skins.SkinSliderTrack"/>
	
	<!--<s:SpriteVisualElement id="hitArea" left="0" right="0" top="0" bottom="0" height="9" width="100%"/>-->
		
	
	<!--- Defines the skin class for the HSliderSkin's thumb. The default skin class is HSliderThumbSkin. -->
	<s:Button
		id="thumb"
		top="{ thumb.height / 2}"
		skinClass="views.skins.SkinSliderThumb"/>
	
</s:SparkSkin>